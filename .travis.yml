# We have to configure the language in the matrix below.
language: generic

matrix:
  include:
    - os: linux
      language: groovy
      jdk: oraclejdk7
      env: USING_OS=linux
    - os: linux
      language: groovy
      jdk: openjdk7
      env: USING_OS=linux
    # 'objective-c' forces a build on OS X.
    # Because we override the install and script commands
    # below, this works fine, even though we are actually
    # using Groovy.
    # TODO: Replace with simply `os: osx` when Travis supports groovy
    # in their multi-OS beta.
    # TODO: Figure out how to set the JDK version on OS X.
    - os: osx
      osx_image: xcode7
      language: objective-c
      env:
       - TEST_SET=1
       - USING_OS=osx
       - USING_XCODE=7
    # Split up the system tests into 2 sets to avoid hitting the
    # max build time.
    - os: osx
      osx_image: xcode7
      language: objective-c
      env:
       - TEST_SET=2
       - USING_OS=osx
       - USING_XCODE=7

branches:
  only:
    - master
    - /^release.*$/
    - /^v[0-9].*$/

# We can be run in a container for improved performance.
sudo: false

cache:
  # don't cache Cocoapods as much of that is generated by j2objcXcode tasks
  directories:
    - systemTests/common/localJ2objcDist

before_install:
  # Don't spew graphic art.
  - export TERM=dumb
  - env
  # Cocoapods must be manually due to issues with Travis:
  # http://docs.travis-ci.com/user/common-build-problems/#Mac%3A-Errors-running-CocoaPods
  - if [ "$USING_OS" = "osx" ]; then gem install cocoapods -v '0.39.0'; fi
  # Travis doesn't let us select the JDK version on OS X.  Force it ourselves.
  - if [ "$USING_OS" = "osx" ]; then ./install-osx-jdk7.sh; fi

# If these steps fail, the build is 'errored' - i.e. misconfigured.
# This can fail if we cannot download Gradle 2.4 or the libraries
# we depend on.
install:
  # Don't spew graphic art.
  - export TERM=dumb
  - env
  - java -Xmx32m -version && javac -J-Xmx32m -version
  - ./gradlew wrapper
  - ./gradlew dependencies
  # Prepare our system tests
  - if [ "$USING_OS" = "osx" ]; then systemTests/install.sh; fi

# If these steps fail, the build is 'failed' - i.e. we have a code defect.
# We compile (assemble) and then build (which also tests) to capture build
# and test failures separately.
script:
  - ./gradlew assemble
  - ./gradlew build
  # Run our system tests
  - if [ "$USING_OS" = "osx" ]; then systemTests/run-all.sh $TEST_SET; fi
