# We have to configure the language in the matrix below.
language: generic

matrix:
  include:
    - os: linux
      language: groovy
      jdk: oraclejdk7
      env: USING_OS=linux
    - os: linux
      language: groovy
      jdk: openjdk7
      env: USING_OS=linux
    # 'objective-c' forces a build on OS X.  The UI will still
    # show a Linux logo, but the logs will show a Mac box.
    # Because we override the install and script commands
    # below, this works fine, even though we are actually
    # using Groovy.  The 'os: osx' doesn't do anything unless
    # we are using Multi-OS support, but is here for clarity.
    # TODO: Replace with simply `os: osx` when Travis supports groovy
    # in their multi-OS beta.
    # TODO: Figure out how to set the JDK version on OS X.
    # Currently we go with the experimental evidence that the default
    # OS X image (that uses Xcode 6.1) has JDK 1.7:
    # http://docs.travis-ci.com/user/languages/objective-c/#Xcode-6.1
    # Having verified their other OS X images, this is the only version
    # that has JDK 1.7:
    # https://travis-ci.org/j2objc-contrib/j2objc-gradle/builds/77036011
    - os: osx
      language: objective-c
      env:
       - USING_OS=osx
       - USING_XCODE=6.1

branches:
  only:
    - master
    - /^release.*$/
    - /^v[0-9].*$/

# We can be run in a container for improved performance.
sudo: false

# If these steps fail, the build is 'errored' - i.e. misconfigured.
# This can fail if we cannot download Gradle 2.4 or the libraries
# we depend on.
install:
  # Don't spew graphic art.
  - export TERM=dumb
  - env
  # We need JDK 7 specifically on OS X.  This will fail if there is no 1.7
  - if [ "$USING_OS" = "osx" ]; then (/usr/libexec/java_home -v 1.7 -F -V); fi
  - java -Xmx32m -version && javac -J-Xmx32m -version
  - ./gradlew wrapper
  - ./gradlew dependencies
  # Prepare our system tests
  - if [ "$USING_OS" = "osx" ]; then (pushd systemTests && ./prep.sh && popd); fi

# If these steps fail, the build is 'failed' - i.e. we have a code defect.
# We compile (assemble) and then build (which also tests) to capture build
# and test failures separately.
script:
  - ./gradlew assemble
  - ./gradlew build
  # Run our system tests
  - if [ "$USING_OS" = "osx" ]; then (pushd systemTests && ./run-all.sh && popd); fi
